// Durations
$fastDuration: .1s !default;
$mediumDuration: .1s !default;
$slowDuration: .5s !default;

// Colors
//$primaryColor: #e1e1e1 !default;
$primaryColor: white !default;
//$secondaryColor: #666 !default;
//$highlightColor: #ccc !default;
//$activeColor: #2098D1 !default;
$activeColor: #d41800 !default;
//$shadowColor: rgba(0, 0, 0, .6) !default;

$nameSpace: 'hvr' !default;

/* Radial Out */
@mixin radial-out {
	@include hacks();
	position: relative;
	overflow: hidden;
	background: $primaryColor;
	@include prefixed(transition-property, color);
	@include prefixed(transition-duration, $mediumDuration);

	&.first {
		border-radius: 4px 0 0 4px;
	}

	&.last {
		border-radius: 0 4px 4px 0;
	}

	&:before {
		content: "";
		position: absolute;
		z-index: -1;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: $activeColor;
		//opacity: 0.8;
		border-radius: 100%;
		@include prefixed(transform, scale(0));
		@include prefixed(transition-property, transform);
		@include prefixed(transition-duration, $mediumDuration);
		@include prefixed(transition-timing-function, ease-out);
	}

	&:hover,
	&:focus,
	&:active {
		color: white;

		&:before {
			@include prefixed(transform, scale(2));
		}
	}
}

// Browser Prefixes - Which CSS prefixes should be used?
$webkit: true !default;
$moz: false !default;
$ms: false !default;
$o: false !default;

// prefix declarations
@mixin prefixed($property, $value) {
	@if $webkit == true {
		-webkit-#{$property}: #{$value};
	}

	@if $moz == true {
		-moz-#{$property}: #{$value};
	}

	@if $ms == true {
		-ms-#{$property}: #{$value};
	}

	@if $o == true {
		-o-#{$property}: #{$value};
	}

	#{$property}: #{$value};
}

@mixin hardwareAccel() {
	// Improve performance on mobile/tablet devices
	// Perspective reduces blurryness of text in Chrome
	@include prefixed(transform, perspective(1px) translateZ(0));
}

@mixin improveAntiAlias() {
	// Improve aliasing on mobile/tablet devices
	box-shadow: 0 0 1px rgba(0, 0, 0, 0);
}

@mixin forceBlockLevel() {
	// Transforms need to be block-level to work
	display: inline-block;
	vertical-align: middle;
}

@mixin hacks() {
	@include forceBlockLevel();
	@include hardwareAccel();
	@include improveAntiAlias();
}

// prefix keyframes
@mixin keyframes($name) {
	@if $webkit == true {
		@-webkit-keyframes #{$name} {
			@content;
		}
	}

	@if $moz == true {
		@-moz-keyframes #{$name} {
			@content;
		}
	}

	@if $ms == true {
		@-ms-keyframes #{$name} {
			@content;
		}
	}

	@if $o == true {
		@-o-keyframes #{$name} {
			@content;
		}
	}

	@keyframes #{$name} {
		@content;
	}
}
